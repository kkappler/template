name: Testing in venv

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  setup-build:
    name: Test (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest"]
        python-version: [3.9, "3.10", "3.11", "3.12", "3.13"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Create and activate venv
      run: |
        python -m venv .venv
        source .venv/bin/activate
        python -m pip install --upgrade pip
        pwd
        ls

    - name: Install pip-tools
      run: |
        source .venv/bin/activate
        pip install pip-tools
        
    - name: Install dependencies (venv)
      run: |
        source .venv/bin/activate
        pip install -e .

    - name: Install dev dependencies (venv)
      run: |
        source .venv/bin/activate
        pip install -e .[dev]

    - name: Generate environment.yaml
      run: |
        source .venv/bin/activate
        pwd
        ls
        python generate_environment.py

    - name: Run Tests
      run: |
        source .venv/bin/activate
        pytest -s -v --cov=./ --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: false
