name: Testing in conda

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:
  setup-build:
    name: Ex1 (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest"]
        # python-version: [3.9, ]
        python-version: [3.9, "3.10", 3.11, "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v2

    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2.1.1
      with:
        activate-environment: template-test
        python-version: ${{ matrix.python-version }}
    
    - name: Generate Conda Environment File
      run: |
        pip install toml
        pip install pyyaml
        python generate_environment.py

    - name: Install Env
      run: |
        python --version
        conda env create --file conda_environment-${{ matrix.python-version }}.yaml
        conda list
        echo "environment contents"
        pip freeze
        
    #- name: Install Test Dependencies
    #  run: pip install -r requirements-dev.txt

    - name: Install Package in Editable Mode
      run: |
        conda activate hp3562a
        pip install -e .

    - name: Run Tests
      run: |
        conda activate hp3562a
        pytest -s -v --cov=./ --cov-report=xml --cov=st

    # - name: "Upload coverage to Codecov"
    #   run: |
    #     conda activate hp3562a
    #     codecov

#    - name: Build Doc
#      if: ${{ (github.ref == 'refs/heads/main') && (matrix.python-version == '3.8')}}
#      run: |
#        cd docs
#        make html
#        cd ..

#    - name: GitHub Pages
#      if: ${{ (github.ref == 'refs/heads/main') && (matrix.python-version == '3.8')}}
#      uses: crazy-max/ghaction-github-pages@v2.5.0
#      with:
#        build_dir: docs/_build/html
#        # Write the given domain name to the CNAME file
#        # fqdn: aurora.simpeg.xyz
#        # Allow Jekyll to build your site
#        jekyll: false # optional, default is true
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
